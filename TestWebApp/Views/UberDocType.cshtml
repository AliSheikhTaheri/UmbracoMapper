@inherits Umbraco.Web.Mvc.UmbracoViewPage<TestWebApp.Models.UberDocTypeViewModel>

@{
    Layout = null;
}

<h1>@Model.Heading</h1>
<p>Upper-cased heading: @Model.UpperCaseHeading</p>
<p>Created on: @Model.CreatedOn</p>
@Html.Raw(Model.BodyText)
<p>Rating: @Model.StarRating stars</p>
<p>Approved: @(Model.IsApproved ? "Yes" : "No")</p>
<p>Average Score: @Model.AverageScore</p>
<p>Concatenated value (heading, star rating, Id and URL): @Model.ConcatenatedValue</p>
<p>Conditional value (met, should display): @Model.ConditionalValueMet</p>
<p>Conditional value (not met, should not display): @Model.ConditionalValueNotMet</p>
<p>Coalesced value (should take node name): @Model.CoalescedValue</p>

@if (Model.MainImage != null)
{
    <img src="@Model.MainImage.Url" />
}

<h2>Comments</h2>

<p>Selected comment: <strong>@Model.SelectedComment</strong> (Id: @Model.SelectedCommentId)</p>

@if (Model.Comments.Any())
{
    foreach (var comment in Model.Comments)
    {
        <p>@comment.Text | <em>@comment.Author from @comment.Country on @comment.CreatedOn.ToString("d-MMM-yyyy HH:mm")</em></p>
        <p>Parent page: @comment.ParentPage</p>
        <p>
            Image from parent page: 
            @if (comment.MainImage != null)
            {
                <img src="@comment.MainImage.Url" />
            }
            else
            {
                <text>Not found</text>
            }
        </p>
    }
}
else
{
    <p>There are no comments.</p>
}

<h2>Countries</h2>

@if (Model.Countries.Any())
{
    <ul>
        @foreach (var country in Model.Countries)
        {
            <li>@country.Name</li>
        }
    </ul>
}
else
{
    <p>There are no countries.</p>
}

<h2>Related Links</h2>

@if (Model.RelatedLinks.Any())
{
    <ul>
        @foreach (var link in Model.RelatedLinks)
        {
            <li><a href="@link.Link" target="_@(link.NewWindow ? "blank" : "self")">@link.Title</a></li>
        }
    </ul>
}
else
{
    <p>There are no related link.</p>
}

<h2>More Random Things</h2>

<p>Single value from XML: @Model.SingleValueFromXml</p>

<p>XML collection: @string.Join(", ", Model.CollectionFromXml.Select(x => x.Name).ToArray())</p>

<p>Single value from Dictionary: @Model.SingleValueFromDictionary</p>

<p>Dictionary collection: @string.Join(", ", Model.CollectionFromDictionary.Select(x => x.Name).ToArray())</p>

<p>Single value from JSON: @Model.SingleValueFromJson</p>

<p>JSON collection: @string.Join(", ", Model.CollectionFromJson.Select(x => x.Name).ToArray())</p>

<h2>Sub-Model</h2>

@if (Model.SubModel != null)
{
    <p>Id: @Model.SubModel.Id, Heading: @Model.SubModel.Heading</p>
}
else
{
    <p>Sub-model is null</p>
}